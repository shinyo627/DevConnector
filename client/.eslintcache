[{"/Users/yo/traversy/devConnector/client/src/index.js":"1","/Users/yo/traversy/devConnector/client/src/App.js":"2","/Users/yo/traversy/devConnector/client/src/reportWebVitals.js":"3","/Users/yo/traversy/devConnector/client/src/components/layout/Landing.js":"4","/Users/yo/traversy/devConnector/client/src/components/layout/Navbar.js":"5","/Users/yo/traversy/devConnector/client/src/components/auth/Login.js":"6","/Users/yo/traversy/devConnector/client/src/components/auth/Register.js":"7","/Users/yo/traversy/devConnector/client/src/store.js":"8","/Users/yo/traversy/devConnector/client/src/reducers/index.js":"9","/Users/yo/traversy/devConnector/client/src/reducers/alert.js":"10","/Users/yo/traversy/devConnector/client/src/actions/types.js":"11","/Users/yo/traversy/devConnector/client/src/actions/alert.js":"12","/Users/yo/traversy/devConnector/client/src/components/layout/Alert.js":"13","/Users/yo/traversy/devConnector/client/src/reducers/auth.js":"14","/Users/yo/traversy/devConnector/client/src/actions/auth.js":"15","/Users/yo/traversy/devConnector/client/src/utils/setAuthToken.js":"16","/Users/yo/traversy/devConnector/client/src/components/dashboard/Dashboard.js":"17","/Users/yo/traversy/devConnector/client/src/components/routing/PrivateRoute.js":"18","/Users/yo/traversy/devConnector/client/src/actions/profile.js":"19","/Users/yo/traversy/devConnector/client/src/reducers/profile.js":"20","/Users/yo/traversy/devConnector/client/src/components/layout/Spinner.js":"21","/Users/yo/traversy/devConnector/client/src/components/profile-forms/CreateProfile.js":"22","/Users/yo/traversy/devConnector/client/src/components/dashboard/DashboardActions.js":"23","/Users/yo/traversy/devConnector/client/src/components/profile-forms/EditProfile.js":"24"},{"size":266,"mtime":1611143662186,"results":"25","hashOfConfig":"26"},{"size":2109,"mtime":1611566287621,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611138005966,"results":"28","hashOfConfig":"26"},{"size":1121,"mtime":1611518586995,"results":"29","hashOfConfig":"26"},{"size":1407,"mtime":1611517961022,"results":"30","hashOfConfig":"26"},{"size":2143,"mtime":1611503565913,"results":"31","hashOfConfig":"26"},{"size":2933,"mtime":1611495640159,"results":"32","hashOfConfig":"26"},{"size":418,"mtime":1611320640178,"results":"33","hashOfConfig":"26"},{"size":196,"mtime":1611514701240,"results":"34","hashOfConfig":"26"},{"size":370,"mtime":1611414796457,"results":"35","hashOfConfig":"26"},{"size":542,"mtime":1611519887369,"results":"36","hashOfConfig":"26"},{"size":443,"mtime":1611560501129,"results":"37","hashOfConfig":"26"},{"size":485,"mtime":1611415703435,"results":"38","hashOfConfig":"26"},{"size":1106,"mtime":1611519783082,"results":"39","hashOfConfig":"26"},{"size":2341,"mtime":1611559720738,"results":"40","hashOfConfig":"26"},{"size":352,"mtime":1611488836020,"results":"41","hashOfConfig":"26"},{"size":1383,"mtime":1611565335113,"results":"42","hashOfConfig":"26"},{"size":604,"mtime":1611503382580,"results":"43","hashOfConfig":"26"},{"size":1457,"mtime":1611560550299,"results":"44","hashOfConfig":"26"},{"size":688,"mtime":1611519956682,"results":"45","hashOfConfig":"26"},{"size":251,"mtime":1611518910812,"results":"46","hashOfConfig":"26"},{"size":6904,"mtime":1611565424547,"results":"47","hashOfConfig":"26"},{"size":635,"mtime":1611565288485,"results":"48","hashOfConfig":"26"},{"size":8239,"mtime":1611566550913,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"10efmeq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"/Users/yo/traversy/devConnector/client/src/index.js",[],["106","107"],"/Users/yo/traversy/devConnector/client/src/App.js",[],"/Users/yo/traversy/devConnector/client/src/reportWebVitals.js",[],"/Users/yo/traversy/devConnector/client/src/components/layout/Landing.js",[],"/Users/yo/traversy/devConnector/client/src/components/layout/Navbar.js",[],"/Users/yo/traversy/devConnector/client/src/components/auth/Login.js",[],"/Users/yo/traversy/devConnector/client/src/components/auth/Register.js",[],"/Users/yo/traversy/devConnector/client/src/store.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/index.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/alert.js",["108"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/actions/types.js",[],"/Users/yo/traversy/devConnector/client/src/actions/alert.js",[],"/Users/yo/traversy/devConnector/client/src/components/layout/Alert.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/auth.js",["109"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  user: null,\n  loading: true,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: payload,\n        loading: false,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      // Setting the token in localStorage\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case AUTH_ERROR:\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      //   Delete the token from localStorage\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/actions/auth.js",[],"/Users/yo/traversy/devConnector/client/src/utils/setAuthToken.js",[],"/Users/yo/traversy/devConnector/client/src/components/dashboard/Dashboard.js",["110"],"import { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport DashboardActions from './DashboardActions';\nimport Spinner from '../layout/Spinner';\n\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  auth: { user },\n  profile: { profile, loading },\n  getCurrentProfile,\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p>\n        <i className='fas fa-user'></i>Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n","/Users/yo/traversy/devConnector/client/src/components/routing/PrivateRoute.js",[],"/Users/yo/traversy/devConnector/client/src/actions/profile.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/profile.js",["111"],"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE } from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n",["112","113"],"/Users/yo/traversy/devConnector/client/src/components/layout/Spinner.js",["114"],"import { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/yo/traversy/devConnector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/yo/traversy/devConnector/client/src/components/dashboard/DashboardActions.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile-forms/EditProfile.js",["115"],"import { useState, useEffect, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  getCurrentProfile,\n  createProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n    // Dependent props/state will be loading. If it loads, getCurrentProfile() and setFormData() get invoked\n  }, [loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n// withRouter() will allow me to pass in history object with push() to createProfile action creator\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":16,"endColumn":3},{"ruleId":"120","severity":1,"message":"121","line":18,"column":1,"nodeType":"122","endLine":54,"endColumn":3},{"ruleId":"123","severity":1,"message":"124","line":17,"column":6,"nodeType":"125","endLine":17,"endColumn":8,"suggestions":"126"},{"ruleId":"120","severity":1,"message":"121","line":11,"column":1,"nodeType":"122","endLine":37,"endColumn":3},{"ruleId":"116","replacedBy":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"120","severity":1,"message":"121","line":4,"column":1,"nodeType":"122","endLine":12,"endColumn":3},{"ruleId":"123","severity":1,"message":"129","line":49,"column":6,"nodeType":"125","endLine":49,"endColumn":15,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["133"],["131"],["132"],"React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"139","text":"140"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"141","text":"142"},[465,467],"[getCurrentProfile]",[1745,1754],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]