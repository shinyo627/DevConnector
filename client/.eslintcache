[{"/Users/yo/traversy/devConnector/client/src/index.js":"1","/Users/yo/traversy/devConnector/client/src/App.js":"2","/Users/yo/traversy/devConnector/client/src/reportWebVitals.js":"3","/Users/yo/traversy/devConnector/client/src/components/layout/Landing.js":"4","/Users/yo/traversy/devConnector/client/src/components/layout/Navbar.js":"5","/Users/yo/traversy/devConnector/client/src/components/auth/Login.js":"6","/Users/yo/traversy/devConnector/client/src/components/auth/Register.js":"7","/Users/yo/traversy/devConnector/client/src/store.js":"8","/Users/yo/traversy/devConnector/client/src/reducers/index.js":"9","/Users/yo/traversy/devConnector/client/src/reducers/alert.js":"10","/Users/yo/traversy/devConnector/client/src/actions/types.js":"11","/Users/yo/traversy/devConnector/client/src/actions/alert.js":"12","/Users/yo/traversy/devConnector/client/src/components/layout/Alert.js":"13","/Users/yo/traversy/devConnector/client/src/reducers/auth.js":"14","/Users/yo/traversy/devConnector/client/src/actions/auth.js":"15","/Users/yo/traversy/devConnector/client/src/utils/setAuthToken.js":"16","/Users/yo/traversy/devConnector/client/src/components/dashboard/Dashboard.js":"17","/Users/yo/traversy/devConnector/client/src/components/routing/PrivateRoute.js":"18","/Users/yo/traversy/devConnector/client/src/actions/profile.js":"19","/Users/yo/traversy/devConnector/client/src/reducers/profile.js":"20","/Users/yo/traversy/devConnector/client/src/components/layout/Spinner.js":"21","/Users/yo/traversy/devConnector/client/src/components/profile-forms/CreateProfile.js":"22","/Users/yo/traversy/devConnector/client/src/components/dashboard/DashboardActions.js":"23","/Users/yo/traversy/devConnector/client/src/components/profile-forms/EditProfile.js":"24","/Users/yo/traversy/devConnector/client/src/components/profile-forms/AddExperience.js":"25","/Users/yo/traversy/devConnector/client/src/components/profile-forms/AddEducation.js":"26","/Users/yo/traversy/devConnector/client/src/components/dashboard/Experience.js":"27","/Users/yo/traversy/devConnector/client/src/components/dashboard/Education.js":"28","/Users/yo/traversy/devConnector/client/src/components/profiles/Profiles.js":"29","/Users/yo/traversy/devConnector/client/src/components/profiles/ProfileItem.js":"30","/Users/yo/traversy/devConnector/client/src/components/profile/Profile.js":"31","/Users/yo/traversy/devConnector/client/src/components/profile/ProfileTop.js":"32","/Users/yo/traversy/devConnector/client/src/components/profile/ProfileAbout.js":"33","/Users/yo/traversy/devConnector/client/src/components/profile/ProfileExperience.js":"34","/Users/yo/traversy/devConnector/client/src/components/profile/ProfileEducation.js":"35","/Users/yo/traversy/devConnector/client/src/components/profile/ProfileGithub.js":"36","/Users/yo/traversy/devConnector/client/src/reducers/post.js":"37","/Users/yo/traversy/devConnector/client/src/components/posts/Posts.js":"38","/Users/yo/traversy/devConnector/client/src/actions/post.js":"39","/Users/yo/traversy/devConnector/client/src/components/posts/PostItem.js":"40","/Users/yo/traversy/devConnector/client/src/components/posts/PostForm.js":"41","/Users/yo/traversy/devConnector/client/src/components/post/Post.js":"42","/Users/yo/traversy/devConnector/client/src/components/post/CommentForm.js":"43","/Users/yo/traversy/devConnector/client/src/components/post/CommentItem.js":"44"},{"size":266,"mtime":1611143662186,"results":"45","hashOfConfig":"46"},{"size":3016,"mtime":1611654463527,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1611138005966,"results":"48","hashOfConfig":"46"},{"size":1121,"mtime":1611518586995,"results":"49","hashOfConfig":"46"},{"size":1550,"mtime":1611619941512,"results":"50","hashOfConfig":"46"},{"size":2147,"mtime":1611570809321,"results":"51","hashOfConfig":"46"},{"size":2937,"mtime":1611570807913,"results":"52","hashOfConfig":"46"},{"size":418,"mtime":1611320640178,"results":"53","hashOfConfig":"46"},{"size":231,"mtime":1611619079802,"results":"54","hashOfConfig":"46"},{"size":370,"mtime":1611414796457,"results":"55","hashOfConfig":"46"},{"size":1056,"mtime":1611657173484,"results":"56","hashOfConfig":"46"},{"size":443,"mtime":1611560501129,"results":"57","hashOfConfig":"46"},{"size":485,"mtime":1611415703435,"results":"58","hashOfConfig":"46"},{"size":1151,"mtime":1611593958361,"results":"59","hashOfConfig":"46"},{"size":2481,"mtime":1611681343881,"results":"60","hashOfConfig":"46"},{"size":352,"mtime":1611488836020,"results":"61","hashOfConfig":"46"},{"size":1906,"mtime":1611607097490,"results":"62","hashOfConfig":"46"},{"size":604,"mtime":1611503382580,"results":"63","hashOfConfig":"46"},{"size":5678,"mtime":1611618800373,"results":"64","hashOfConfig":"46"},{"size":1016,"mtime":1611618583029,"results":"65","hashOfConfig":"46"},{"size":251,"mtime":1611518910812,"results":"66","hashOfConfig":"46"},{"size":6904,"mtime":1611565424547,"results":"67","hashOfConfig":"46"},{"size":643,"mtime":1611570805300,"results":"68","hashOfConfig":"46"},{"size":8258,"mtime":1611607133794,"results":"69","hashOfConfig":"46"},{"size":3467,"mtime":1611584465589,"results":"70","hashOfConfig":"46"},{"size":3563,"mtime":1611594567931,"results":"71","hashOfConfig":"46"},{"size":1391,"mtime":1611594193792,"results":"72","hashOfConfig":"46"},{"size":1377,"mtime":1611594416783,"results":"73","hashOfConfig":"46"},{"size":1288,"mtime":1611607088329,"results":"74","hashOfConfig":"46"},{"size":984,"mtime":1611606989666,"results":"75","hashOfConfig":"46"},{"size":2725,"mtime":1611612751334,"results":"76","hashOfConfig":"46"},{"size":1846,"mtime":1611611157499,"results":"77","hashOfConfig":"46"},{"size":800,"mtime":1611611726667,"results":"78","hashOfConfig":"46"},{"size":641,"mtime":1611612245508,"results":"79","hashOfConfig":"46"},{"size":712,"mtime":1611612607729,"results":"80","hashOfConfig":"46"},{"size":1703,"mtime":1611613397068,"results":"81","hashOfConfig":"46"},{"size":1581,"mtime":1611657752943,"results":"82","hashOfConfig":"46"},{"size":1013,"mtime":1611653659280,"results":"83","hashOfConfig":"46"},{"size":3915,"mtime":1611661329826,"results":"84","hashOfConfig":"46"},{"size":2494,"mtime":1611656864500,"results":"85","hashOfConfig":"46"},{"size":991,"mtime":1611653618508,"results":"86","hashOfConfig":"46"},{"size":1186,"mtime":1611661657156,"results":"87","hashOfConfig":"46"},{"size":1030,"mtime":1611661400827,"results":"88","hashOfConfig":"46"},{"size":1386,"mtime":1611662254650,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"10efmeq",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"92"},"/Users/yo/traversy/devConnector/client/src/index.js",[],["188","189"],"/Users/yo/traversy/devConnector/client/src/App.js",[],"/Users/yo/traversy/devConnector/client/src/reportWebVitals.js",[],"/Users/yo/traversy/devConnector/client/src/components/layout/Landing.js",[],"/Users/yo/traversy/devConnector/client/src/components/layout/Navbar.js",[],"/Users/yo/traversy/devConnector/client/src/components/auth/Login.js",[],"/Users/yo/traversy/devConnector/client/src/components/auth/Register.js",[],"/Users/yo/traversy/devConnector/client/src/store.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/index.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/alert.js",["190"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/actions/types.js",[],"/Users/yo/traversy/devConnector/client/src/actions/alert.js",[],"/Users/yo/traversy/devConnector/client/src/components/layout/Alert.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/auth.js",["191"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  user: null,\n  loading: true,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: payload,\n        loading: false,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      // Setting the token in localStorage\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case AUTH_ERROR:\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      //   Delete the token from localStorage\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/actions/auth.js",[],"/Users/yo/traversy/devConnector/client/src/utils/setAuthToken.js",[],"/Users/yo/traversy/devConnector/client/src/components/dashboard/Dashboard.js",[],"/Users/yo/traversy/devConnector/client/src/components/routing/PrivateRoute.js",[],"/Users/yo/traversy/devConnector/client/src/actions/profile.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/profile.js",["192"],"import {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/components/layout/Spinner.js",["193"],"import { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/yo/traversy/devConnector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/yo/traversy/devConnector/client/src/components/dashboard/DashboardActions.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile-forms/EditProfile.js",["194"],"import { useState, useEffect, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  getCurrentProfile,\n  createProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    });\n    // Dependent props/state will be loading. If it loads, getCurrentProfile() and setFormData() get invoked\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n// withRouter() will allow me to pass in history object with push() to createProfile action creator\n","/Users/yo/traversy/devConnector/client/src/components/profile-forms/AddExperience.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile-forms/AddEducation.js",[],"/Users/yo/traversy/devConnector/client/src/components/dashboard/Experience.js",[],"/Users/yo/traversy/devConnector/client/src/components/dashboard/Education.js",[],"/Users/yo/traversy/devConnector/client/src/components/profiles/Profiles.js",[],"/Users/yo/traversy/devConnector/client/src/components/profiles/ProfileItem.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile/Profile.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile/ProfileTop.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile/ProfileAbout.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile/ProfileExperience.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile/ProfileEducation.js",[],"/Users/yo/traversy/devConnector/client/src/components/profile/ProfileGithub.js",[],"/Users/yo/traversy/devConnector/client/src/reducers/post.js",["195"],"import {\n  GET_POSTS,\n  GET_POST,\n  ADD_POST,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  POST_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n          loading: false,\n        },\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/components/posts/Posts.js",[],"/Users/yo/traversy/devConnector/client/src/actions/post.js",["196"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  GET_POST,\n  ADD_POST,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  POST_ERROR,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get a post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      // Incoming data is array of likes\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    // When user already liked the post then POST_ERROR will trigger\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      // Incoming data is array of likes\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    // When user already liked the post then POST_ERROR will trigger\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      // Incoming data is array of likes\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    // When user already liked the post then POST_ERROR will trigger\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/yo/traversy/devConnector/client/src/components/posts/PostItem.js",[],"/Users/yo/traversy/devConnector/client/src/components/posts/PostForm.js",[],"/Users/yo/traversy/devConnector/client/src/components/post/Post.js",["197"],"import { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ post: { post, loading }, getPost, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back to Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comment'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\nexport default connect(mapStateToProps, { getPost })(Post);\n","/Users/yo/traversy/devConnector/client/src/components/post/CommentForm.js",[],"/Users/yo/traversy/devConnector/client/src/components/post/CommentItem.js",["198","199"],"import { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nimport { connect } from 'react-redux';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => {\n  return (\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='avatar' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n        {!auth.loading && user == auth.user._id && (\n          <button\n            onClick={(e) => deleteComment(postId, _id)}\n            type='button'\n            className='btn btn-danger'\n          >\n            <i className='fas fa-times'></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":5,"column":1,"nodeType":"206","endLine":16,"endColumn":3},{"ruleId":"204","severity":1,"message":"205","line":19,"column":1,"nodeType":"206","endLine":56,"endColumn":3},{"ruleId":"204","severity":1,"message":"205","line":18,"column":1,"nodeType":"206","endLine":58,"endColumn":3},{"ruleId":"204","severity":1,"message":"205","line":4,"column":1,"nodeType":"206","endLine":12,"endColumn":3},{"ruleId":"207","severity":1,"message":"208","line":49,"column":6,"nodeType":"209","endLine":49,"endColumn":34,"suggestions":"210"},{"ruleId":"204","severity":1,"message":"205","line":19,"column":1,"nodeType":"206","endLine":79,"endColumn":3},{"ruleId":"211","severity":1,"message":"212","line":89,"column":11,"nodeType":"213","messageId":"214","endLine":89,"endColumn":14},{"ruleId":"207","severity":1,"message":"215","line":14,"column":6,"nodeType":"209","endLine":14,"endColumn":15,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":18},{"ruleId":"218","severity":1,"message":"219","line":28,"column":32,"nodeType":"220","messageId":"221","endLine":28,"endColumn":34},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["224"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["225"],"'Fragment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"230","text":"231"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"232","text":"233"},[1745,1773],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[504,513],"[getPost, match.params.id]"]